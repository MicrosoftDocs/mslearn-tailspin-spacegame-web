trigger:
- '*'

pool:
  vmImage: ubuntu-latest

variables: # Variables de entorno que utilizo en el pipeline
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '6.x'

steps:
- task: UseDotNet@2 # Esta tarea es necesaria para seleccionar e instalar la versión de .NET SDK que se usará
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)' # Versión de .NET SDK que se usará (llamo la variable definida en la sección de variables)

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt' # Esta tarea escribe información sobre el build en un archivo de texto
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2  # Esta tarea restaura o instala las dependencias del proyecto
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2 
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build' # Esta tarea compila el proyecto, con el comando build
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project  - $(buildConfiguration)' # Esta tarea publica el proyecto, con el comando publish, basicamente lo empaqueta
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1 # Esta tarea publica los artefactos del build en Azure DevOps
  displayName: 'Publish Artifact: drop'
  condition: succeeded() # Esta tarea se ejecuta solo si las tareas anteriores se ejecutaron correctamente