# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  # vmImage: 'ubuntu-latest'
  name: MyLocalAgentPool
  demands: Agent.Name -equals MyLocalAgent

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  projects: '**/*.csproj'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotNetSdkVersion: '6.x'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotNetSdkVersion)'
  inputs:
    packageType: sdk
    version: '$(dotNetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: 'npx sass $(wwwrootDir) --source-map'
  displayName: 'Compile sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.Id), $(Build.BuildNumber)" > buildInfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: '.Net restore'
  inputs:
    command: restore
    projects: $(projects)

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: publish
    projects: $(projects)
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output  $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifact: drop'
  condition: succeeded()