variables:
- group: ARM_VARS

trigger:
- '*'

#pool:
#  vmImage: ubuntu-latest

steps:
- task: TerraformInstaller@0
  displayName: 'Installing Terraform'
  inputs:
    terraformVersion: '1.5.7'

- task: TerraformCLI@1
  displayName: 'terraform init'
  inputs:
    command: init
    backendType: azurerm
    # Service connection to authorize backend access. Supports Subscription & Management Group Scope
    backendServiceArm: 'azurerm-service-connection'
    # Tenant id of the target backend. This can be used to override the default tenant id inherited from the service connection
    #backendAzureRmTenantId: ''
    # Subscription id of the target backend. This can be used to specify the subscription when using Management Group scoped
    # Service connection or to override the subscription id defined in a Subscription scoped service connection
    #backendAzureRmSubscriptionId: ''
    backendAzureRmResourceGroupName: 'tfstate'
    # azure location shortname of the backend resource group and storage account
    backendAzureRmResourceGroupLocation: 'eastus'
    backendAzureRmStorageAccountName: 'tfstatestgacct27555'
    # azure storage account sku, used when creating the storage account
    backendAzureRmStorageAccountSku: 'Standard_RAGRS'
    # azure blob container to store the state file
    backendAzureRmContainerName: 'tfstate'
    # azure blob file name
    backendAzureRmKey: ./game-demo.tfstate


- task: TerraformCLI@1
  displayName: 'terraform plan'
  inputs:
    command: plan
    environmentServiceName: 'azurerm-service-connection'
    # name of the secure file to use. Can be standard terraform vars file or .env file.
    #secureVarsFile: my-secure-file.env
    # specify a variable input via pipeline variable
    #commandOptions: '-var secret=$(mySecretPipelineVar)'

#- script: |
#    terraform --version
#    terraform init -backend-config="storage_account_name=$(storageAccountName)" -backend-config="container_name=$(containerName)" -backend-config="key=$(key)" -backend-config="access_key=$(accessKey)"
#    terraform plan -out=tfplan
#  displayName: 'Terraform Init and Plan'

